{"version":3,"file":"index.js","sources":["../src/operators/par.js","../src/is.js","../src/operators/handle.js","../src/operators/assign.js","../src/operators/prev.js","../src/reactive.jsx"],"sourcesContent":["import { merge } from 'rxjs';\n\nexport function par(...operators) {\n    return props$ => merge(...operators.map(op => op(props$)));\n}\n","// @flow\nexport function isFunction(o: any): boolean {\n    return typeof o === 'function';\n}\n\nexport function isObject(o: any): boolean {\n    return (\n        Boolean(o) &&\n        typeof o === 'object' &&\n        Object.prototype.toString.call(o) === '[object Object]'\n    );\n}\n\nexport function isNil(o: any): boolean {\n    return o === null || o === undefined;\n}\n\nexport function isSame(objA: any, objB: any): boolean {\n    if (objA === objB) {\n        return true;\n    }\n    if (!isObject(objA) || !isObject(objB)) {\n        return false;\n    }\n    const keysA = Object.keys(objA);\n    const keysB = Object.keys(objB);\n    const sameSize = keysA.length === keysB.length;\n    const sameValues = () => keysA.every(key => objA[key] === objB[key]);\n    return sameSize && sameValues();\n}\n","// @flow\n/* eslint-disable no-redeclare */\nimport { Subject, of, concat, Observable } from 'rxjs';\nimport { filter, pluck, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { isFunction, isObject } from '../is';\n\ntype ResultOperator<Props> = (\n    Observable<Props>,\n) => Observable<Props | { [propName: string]: (event: any) => void }>;\ndeclare function handle<Props, I>(\n    propName: string,\n    rxjs$OperatorFunction<I, Props>,\n): ResultOperator<Props>;\ndeclare function handle<Props, I, O1>(\n    propName: string,\n    rxjs$OperatorFunction<I, O1>,\n    rxjs$OperatorFunction<O1, $Shape<Props>>,\n): ResultOperator<Props>;\ndeclare function handle<Props, I, O1, O2>(\n    propName: string,\n    rxjs$OperatorFunction<I, O1>,\n    rxjs$OperatorFunction<O1, O2>,\n    rxjs$OperatorFunction<O2, $Shape<Props>>,\n): ResultOperator<Props>;\ndeclare function handle<Props, I, O1, O2, O3>(\n    propName: string,\n    rxjs$OperatorFunction<I, O1>,\n    rxjs$OperatorFunction<O1, O2>,\n    rxjs$OperatorFunction<O2, O3>,\n    rxjs$OperatorFunction<O3, $Shape<Props>>,\n): ResultOperator<Props>;\ndeclare function handle<Props, I, O1, O2, O3, O4>(\n    propName: string,\n    rxjs$OperatorFunction<I, O1>,\n    rxjs$OperatorFunction<O1, O2>,\n    rxjs$OperatorFunction<O2, O3>,\n    rxjs$OperatorFunction<O3, O4>,\n    rxjs$OperatorFunction<O4, $Shape<Props>>,\n): ResultOperator<Props>;\ndeclare function handle<Props, I, O1, O2, O3, O4, O5>(\n    propName: string,\n    rxjs$OperatorFunction<I, O1>,\n    rxjs$OperatorFunction<O1, O2>,\n    rxjs$OperatorFunction<O2, O3>,\n    rxjs$OperatorFunction<O3, O4>,\n    rxjs$OperatorFunction<O4, O5>,\n    rxjs$OperatorFunction<O5, $Shape<Props>>,\n): ResultOperator<Props>;\ndeclare function handle<Props, I, O1, O2, O3, O4, O5, O6>(\n    propName: string,\n    rxjs$OperatorFunction<I, O1>,\n    rxjs$OperatorFunction<O1, O2>,\n    rxjs$OperatorFunction<O2, O3>,\n    rxjs$OperatorFunction<O3, O4>,\n    rxjs$OperatorFunction<O4, O5>,\n    rxjs$OperatorFunction<O5, O6>,\n    rxjs$OperatorFunction<O6, $Shape<Props>>,\n): ResultOperator<Props>;\ndeclare function handle<Props, I, O1, O2, O3, O4, O5, O6, O7>(\n    propName: string,\n    rxjs$OperatorFunction<I, O1>,\n    rxjs$OperatorFunction<O1, O2>,\n    rxjs$OperatorFunction<O2, O3>,\n    rxjs$OperatorFunction<O3, O4>,\n    rxjs$OperatorFunction<O4, O5>,\n    rxjs$OperatorFunction<O5, O6>,\n    rxjs$OperatorFunction<O6, O7>,\n    rxjs$OperatorFunction<O7, $Shape<Props>>,\n): ResultOperator<Props>;\ndeclare function handle<Props, I, O1, O2, O3, O4, O5, O6, O7, O8>(\n    propName: string,\n    rxjs$OperatorFunction<I, O1>,\n    rxjs$OperatorFunction<O1, O2>,\n    rxjs$OperatorFunction<O2, O3>,\n    rxjs$OperatorFunction<O3, O4>,\n    rxjs$OperatorFunction<O4, O5>,\n    rxjs$OperatorFunction<O5, O6>,\n    rxjs$OperatorFunction<O6, O7>,\n    rxjs$OperatorFunction<O7, O8>,\n    rxjs$OperatorFunction<O8, $Shape<Props>>,\n    ...operations: rxjs$OperatorFunction<any, any>[]\n): ResultOperator<Props>;\n\nexport function handle(propName, ...handlerOperators) {\n    return props$ =>\n        props$.pipe(\n            pluck(propName),\n            distinctUntilChanged(),\n            switchMap((handler) => {\n                const eventsSubject = new Subject();\n                const wrappedHandler = (event) => {\n                    eventsSubject.next(event);\n                    if (isFunction(handler)) handler(event);\n                };\n                return concat(\n                    of({\n                        [propName]: wrappedHandler,\n                    }),\n                    eventsSubject.pipe(\n                        ...handlerOperators,\n                        filter(obj => !(obj instanceof Event)),\n                        filter(isObject),\n                    ),\n                );\n            }),\n        );\n}\n","// @flow\nimport { scan } from 'rxjs/operators';\n\ntype ReturnType<T> =\n    $Call<typeof scan, <T>(acc: T | {}, delta: T, index: number) => T | {}, T | {}>;\n\nexport function assign<T>(): ReturnType<T> {\n    return scan((acc, delta) => Object.assign({}, acc, delta), {});\n}\n","// @flow\nimport { startWith, pairwise, map } from 'rxjs/operators';\n\nexport function prev<T>(startVal?: T): rxjs$OperatorFunction<T, T> {\n    return props$ =>\n        props$.pipe(\n            startWith(startVal),\n            pairwise(),\n            map(([previous]) => previous),\n        );\n}\n","// @flow\nimport * as React from 'react';\nimport { BehaviorSubject, of, concat, combineLatest, Subscription } from 'rxjs';\nimport type { Observable } from 'rxjs';\nimport { filter, distinctUntilChanged } from 'rxjs/operators';\nimport { assign } from './operators';\nimport { isObject, isSame } from './is';\n\nexport function reactive<Config: {}>(\n    propsMapper: (arg: Observable<Config>) => Observable<$Shape<Config>>,\n): (React.AbstractComponent<Config>) => React.AbstractComponent<Config> {\n    return (WrappedComponent): React.AbstractComponent<Config> =>\n        class ReactiveWrapper extends React.Component<Config, Config> {\n            static displayName = `Reactive(${WrappedComponent.displayName ||\n                WrappedComponent.name ||\n                ''})`;\n\n            constructor(props: Config) {\n                super(props);\n                this.state = props;\n            }\n\n            componentDidMount() {\n                this.propsSubject = new BehaviorSubject(this.props);\n                const props$ = this.propsSubject.pipe(distinctUntilChanged(isSame));\n                const deltaProps$ = propsMapper(props$).pipe(\n                    filter(isObject),\n                    assign(),\n                );\n                const newProps$ = combineLatest(\n                    props$,\n                    concat(of({}), deltaProps$),\n                    (props, delta) => Object.assign({}, props, delta),\n                );\n                this.subscription = newProps$.subscribe((newProps: Config) => {\n                    this.setState(newProps);\n                });\n            }\n\n            componentDidUpdate() {\n                this.propsSubject.next(this.props);\n            }\n\n            componentWillUnmount() {\n                this.propsSubject.complete();\n                this.subscription.unsubscribe();\n            }\n\n            subscription: Subscription;\n            propsSubject: BehaviorSubject<Config>;\n\n            render() {\n                return <WrappedComponent {...this.state} />;\n            }\n        };\n}\n"],"names":["par","operators","merge","map","op","props$","isFunction","o","isObject","Boolean","Object","prototype","toString","call","isNil","undefined","isSame","objA","objB","keysA","keys","keysB","sameSize","length","sameValues","every","key","handle","propName","handlerOperators","pipe","pluck","distinctUntilChanged","switchMap","handler","eventsSubject","Subject","wrappedHandler","event","next","concat","of","filter","obj","Event","assign","scan","acc","delta","prev","startVal","startWith","pairwise","previous","reactive","propsMapper","WrappedComponent","props","state","componentDidMount","propsSubject","BehaviorSubject","deltaProps$","newProps$","combineLatest","subscription","subscribe","newProps","setState","componentDidUpdate","componentWillUnmount","complete","unsubscribe","render","React.createElement","React","displayName","name"],"mappings":"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"}